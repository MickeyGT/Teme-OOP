    #include<iostream>
    #include<math.h>
    using namespace std;

    class Figura
    {
        public:
        virtual double aria()=0;
        virtual double perimetru()=0;
    };

    class CPunct
    {
    public:
        double x,y;

        public:

        CPunct():x(0),y(0){};

        CPunct(double x, double y)
        {
            this->x = this->y;
        }
    };

    class CDreapta : public CPunct
    {
    public:
        double x1,y1;

    public:

         CDreapta()
         {
             this->x=0;
             this->y=0;
             this->x1=0;
             this->y1=0;
         }

         CDreapta(int x,int y,int x1,int y1)
         {
             this->x=x;
             this->y=y;
             this->x1=x1;
             this->y1=y1;
         }

         double distance()
         {
             return sqrt((x1-x)*(x1-x) + (y1-y)*(y1-y));
         }
    };

    class CCircle: public Figura,public CDreapta
    {
    public:
        CCircle()
        {
            this->x=this->y=this->x1=this->y1=0;
        }

        CCircle(CDreapta d)
        {
            this->x=d.x;
            this->y=d.y;
            this->x1=d.x1;
            this->y1=d.y1;
        }

        double aria()
        {
            return 3.14*distance()*distance();
        }
        double perimetru()
        {
            return 2*3.14*distance();
        }

    };

    class CPatrat :public Figura,public CDreapta
    {
        public:
        CPatrat()
        {
            this->x=this->y=this->x1=this->y1=0;
        }

        CPatrat(CDreapta d)
        {
            this->x=d.x;
            this->y=d.y;
            this->x1=d.x1;
            this->y1=d.y1;
        }

        double aria()
        {
            return distance()*distance()/4;
        }
        double perimetru()
        {
            return sqrt(distance()*distance()/2)*4;
        }

    };

    class CDreptunghi : public Figura,public CDreapta
    {
        public:
         CDreapta d1;

         CDreptunghi()
         {
             this->x=this->y=this->x1=this->y1=0;
             d1.x=d1.y=d1.x1=d1.y1=0;
         }

         CDreptunghi(CDreapta d1, CDreapta d2)
         {
             this->x=d1.x,this->y=d1.y,this->x1=d1.x1,this->y1=d1.y1;
             this->d1=d2;
         }

         double aria()
        {
            return distance()*d1.distance();
        }
        double perimetru()
        {
            return 2*distance() + 2*d1.distance();
        }
    };

    int main()
    {
        Figura *vec[5];

        vec[1]= new CCircle(CDreapta(0,0,1,1));

        vec[2] = new CPatrat(CDreapta(0,0,1,1));

        vec[3] = new CDreptunghi(CDreapta(0,0,0,1),CDreapta(0,1,2,1));

        for(int i=1;i<=3;++i)
        {
            cout<<vec[i]->aria()<<"\n";
            cout<<vec[i]->perimetru()<<"\n";
        }

        return 0;
    }


